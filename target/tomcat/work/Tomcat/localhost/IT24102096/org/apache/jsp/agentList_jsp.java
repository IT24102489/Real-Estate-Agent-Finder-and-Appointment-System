/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2025-05-20 17:15:05 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.List;
import com.realestate.model.Agent;

public final class agentList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("  <title>Our Agents - Real Estate System</title>\n");
      out.write("  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("  <link href=\"https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap\" rel=\"stylesheet\">\n");
      out.write("  <link rel=\"stylesheet\" href=\"css/styles.css\">\n");
      out.write("  <style>\n");
      out.write("    .agent-card {\n");
      out.write("      border: 1px solid #e0e0e0;\n");
      out.write("      border-radius: 8px;\n");
      out.write("      margin-bottom: 20px;\n");
      out.write("      padding: 15px;\n");
      out.write("      box-shadow: 0 2px 4px rgba(0,0,0,0.05);\n");
      out.write("      transition: transform 0.2s ease;\n");
      out.write("      background-color: #fff;\n");
      out.write("    }\n");
      out.write("    .agent-card:hover {\n");
      out.write("      transform: translateY(-5px);\n");
      out.write("      box-shadow: 0 5px 15px rgba(0,0,0,0.1);\n");
      out.write("    }\n");
      out.write("    .agent-top {\n");
      out.write("      display: flex;\n");
      out.write("      align-items: center;\n");
      out.write("      margin-bottom: 15px;\n");
      out.write("    }\n");
      out.write("    .agent-photo {\n");
      out.write("      width: 80px;\n");
      out.write("      height: 80px;\n");
      out.write("      border-radius: 50%;\n");
      out.write("      margin-right: 15px;\n");
      out.write("      object-fit: cover;\n");
      out.write("      background-color: #f0f0f0;\n");
      out.write("    }\n");
      out.write("    .agent-info {\n");
      out.write("      flex: 1;\n");
      out.write("    }\n");
      out.write("    .agent-name {\n");
      out.write("      font-size: 1.25rem;\n");
      out.write("      font-weight: 600;\n");
      out.write("      margin: 0 0 5px 0;\n");
      out.write("    }\n");
      out.write("    .agent-expertise {\n");
      out.write("      color: #555;\n");
      out.write("      font-size: 0.9rem;\n");
      out.write("      margin: 0 0 5px 0;\n");
      out.write("    }\n");
      out.write("    .agent-contact {\n");
      out.write("      font-size: 0.9rem;\n");
      out.write("      margin-bottom: 10px;\n");
      out.write("    }\n");
      out.write("    .agent-rating {\n");
      out.write("      display: flex;\n");
      out.write("      align-items: center;\n");
      out.write("    }\n");
      out.write("    .star-rating {\n");
      out.write("      display: flex;\n");
      out.write("      margin-right: 10px;\n");
      out.write("    }\n");
      out.write("    .rating-value {\n");
      out.write("      font-weight: 600;\n");
      out.write("      color: #f39c12;\n");
      out.write("    }\n");
      out.write("    .agent-actions {\n");
      out.write("      margin-top: 15px;\n");
      out.write("      display: flex;\n");
      out.write("      justify-content: space-between;\n");
      out.write("    }\n");
      out.write("    .sort-options {\n");
      out.write("      margin-bottom: 20px;\n");
      out.write("      background-color: #f5f5f5;\n");
      out.write("      padding: 15px;\n");
      out.write("      border-radius: 5px;\n");
      out.write("    }\n");
      out.write("    .sort-btn {\n");
      out.write("      margin-right: 10px;\n");
      out.write("      padding: 5px 15px;\n");
      out.write("      border: 1px solid #ddd;\n");
      out.write("      border-radius: 20px;\n");
      out.write("      background-color: #fff;\n");
      out.write("      cursor: pointer;\n");
      out.write("      transition: all 0.2s ease;\n");
      out.write("    }\n");
      out.write("    .sort-btn:hover, .sort-btn.active {\n");
      out.write("      background-color: #007bff;\n");
      out.write("      color: white;\n");
      out.write("      border-color: #007bff;\n");
      out.write("    }\n");
      out.write("  </style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("  <nav class=\"navbar\">\n");
      out.write("    <div class=\"container\">\n");
      out.write("      <a href=\"index.jsp\" class=\"navbar-brand\">Real Estate System</a>\n");
      out.write("      <ul class=\"navbar-nav\">\n");
      out.write("        <li class=\"nav-item\"><a href=\"index.jsp\" class=\"nav-link\">Home</a></li>\n");
      out.write("        <li class=\"nav-item\"><a href=\"listAgents\" class=\"nav-link active\">Agents</a></li>\n");
      out.write("        <li class=\"nav-item\"><a href=\"listReviews\" class=\"nav-link\">Reviews</a></li>\n");
      out.write("        ");
 if (session.getAttribute("user") != null) { 
      out.write("\n");
      out.write("          <li class=\"nav-item dropdown\">\n");
      out.write("            <a href=\"#\" class=\"nav-link\">Welcome, ");
      out.print( ((com.realestate.model.User)session.getAttribute("user")).getName() );
      out.write("</a>\n");
      out.write("            <div class=\"dropdown-menu\">\n");
      out.write("              <a href=\"auth?action=logout\" class=\"dropdown-item\">Logout</a>\n");
      out.write("            </div>\n");
      out.write("          </li>\n");
      out.write("        ");
 } else { 
      out.write("\n");
      out.write("          <li class=\"nav-item\"><a href=\"login.jsp\" class=\"nav-link\">Login</a></li>\n");
      out.write("        ");
 } 
      out.write("\n");
      out.write("      </ul>\n");
      out.write("    </div>\n");
      out.write("  </nav>\n");
      out.write("\n");
      out.write("  <div class=\"container mt-4\">\n");
      out.write("    ");
 if (Boolean.TRUE.equals(request.getAttribute("selectForReview"))) { 
      out.write("\n");
      out.write("      <h1>Select an Agent to Review</h1>\n");
      out.write("      <p>Please select an agent from the list below to write your review.</p>\n");
      out.write("    ");
 } else { 
      out.write("\n");
      out.write("      <h1>Our Real Estate Agents</h1>\n");
      out.write("      <p>Discover our team of professional real estate agents ready to help you.</p>\n");
      out.write("    ");
 } 
      out.write("\n");
      out.write("    \n");
      out.write("    <div class=\"sort-options\">\n");
      out.write("      <span>Sort by: </span>\n");
      out.write("      <a href=\"listAgents?sort=rating\" class=\"sort-btn ");
      out.print( "rating".equals(request.getAttribute("sort")) ? "active" : "" );
      out.write("\">Highest Rated</a>\n");
      out.write("      <a href=\"listAgents?sort=id\" class=\"sort-btn ");
      out.print( "id".equals(request.getAttribute("sort")) ? "active" : "" );
      out.write("\">Default</a>\n");
      out.write("    </div>\n");
      out.write("    \n");
      out.write("    <div class=\"row\">\n");
      out.write("      ");
 
      List<Agent> agents = (List<Agent>) request.getAttribute("agents");
      if (agents != null && !agents.isEmpty()) {
          for (Agent agent : agents) {
      
      out.write("\n");
      out.write("          <div class=\"col-md-6\">\n");
      out.write("            <div class=\"agent-card\">\n");
      out.write("              <div class=\"agent-top\">\n");
      out.write("                <img src=\"images/");
      out.print( agent.getImagePath() );
      out.write("\" class=\"agent-photo\" alt=\"");
      out.print( agent.getName() );
      out.write("\" onerror=\"this.src='images/default-agent.jpg'\">\n");
      out.write("                <div class=\"agent-info\">\n");
      out.write("                  <h3 class=\"agent-name\">");
      out.print( agent.getName() );
      out.write("</h3>\n");
      out.write("                  <p class=\"agent-expertise\">");
      out.print( agent.getExpertise() );
      out.write("</p>\n");
      out.write("                  <div class=\"agent-rating\">\n");
      out.write("                    <div class=\"star-rating\">\n");
      out.write("                      ");
 for (int i = 1; i <= 5; i++) { 
      out.write("\n");
      out.write("                        <span class=\"");
      out.print( i <= agent.getRating() ? "star-active" : "star-inactive" );
      out.write("\"></span>\n");
      out.write("                      ");
 } 
      out.write("\n");
      out.write("                    </div>\n");
      out.write("                    <span class=\"rating-value\">");
      out.print( String.format("%.1f", agent.getRating()) );
      out.write("</span>\n");
      out.write("                  </div>\n");
      out.write("                </div>\n");
      out.write("              </div>\n");
      out.write("              <div class=\"agent-contact\">\n");
      out.write("                <p><strong>Email:</strong> ");
      out.print( agent.getEmail() );
      out.write("</p>\n");
      out.write("                <p><strong>Phone:</strong> ");
      out.print( agent.getPhone() );
      out.write("</p>\n");
      out.write("              </div>\n");
      out.write("              <div class=\"agent-actions\">\n");
      out.write("                ");
 if (Boolean.TRUE.equals(request.getAttribute("selectForReview"))) { 
      out.write("\n");
      out.write("                  <a href=\"addReview?agentId=");
      out.print( agent.getId() );
      out.write("\" class=\"btn btn-primary btn-block\">Select This Agent to Review</a>\n");
      out.write("                ");
 } else { 
      out.write("\n");
      out.write("                  <a href=\"listReviews?agentId=");
      out.print( agent.getId() );
      out.write("\" class=\"btn btn-primary\">View Reviews</a>\n");
      out.write("                  ");
 if (session.getAttribute("user") != null) { 
      out.write("\n");
      out.write("                    <a href=\"addReview?agentId=");
      out.print( agent.getId() );
      out.write("\" class=\"btn btn-success\">Write Review</a>\n");
      out.write("                  ");
 } else { 
      out.write("\n");
      out.write("                    <a href=\"login.jsp?redirect=addReview?agentId=");
      out.print( agent.getId() );
      out.write("\" class=\"btn btn-success\">Login to Review</a>\n");
      out.write("                  ");
 } 
      out.write("\n");
      out.write("                ");
 } 
      out.write("\n");
      out.write("              </div>\n");
      out.write("            </div>\n");
      out.write("          </div>\n");
      out.write("      ");

          }
      } else {
      
      out.write("\n");
      out.write("          <div class=\"alert alert-info\">No agents found in the system.</div>\n");
      out.write("      ");
 } 
      out.write("\n");
      out.write("    </div>\n");
      out.write("  </div>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
